{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/pacman/source/css/style.styl","path":"css/style.styl","modified":0,"renderable":1},{"_id":"themes/pacman/source/fancybox/blank.gif","path":"fancybox/blank.gif","modified":0,"renderable":1},{"_id":"themes/pacman/source/fancybox/fancybox_loading.gif","path":"fancybox/fancybox_loading.gif","modified":0,"renderable":1},{"_id":"themes/pacman/source/fancybox/fancybox_loading@2x.gif","path":"fancybox/fancybox_loading@2x.gif","modified":0,"renderable":1},{"_id":"themes/pacman/source/fancybox/fancybox_overlay.png","path":"fancybox/fancybox_overlay.png","modified":0,"renderable":1},{"_id":"themes/pacman/source/fancybox/fancybox_sprite.png","path":"fancybox/fancybox_sprite.png","modified":0,"renderable":1},{"_id":"themes/pacman/source/fancybox/fancybox_sprite@2x.png","path":"fancybox/fancybox_sprite@2x.png","modified":0,"renderable":1},{"_id":"themes/pacman/source/fancybox/jquery.fancybox.css","path":"fancybox/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/pacman/source/fancybox/jquery.fancybox.js","path":"fancybox/jquery.fancybox.js","modified":0,"renderable":1},{"_id":"themes/pacman/source/fancybox/jquery.fancybox.pack.js","path":"fancybox/jquery.fancybox.pack.js","modified":0,"renderable":1},{"_id":"themes/pacman/source/font/coveredbyyourgrace-webfont.eot","path":"font/coveredbyyourgrace-webfont.eot","modified":0,"renderable":1},{"_id":"themes/pacman/source/font/coveredbyyourgrace-webfont.ttf","path":"font/coveredbyyourgrace-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/pacman/source/font/coveredbyyourgrace-webfont.woff","path":"font/coveredbyyourgrace-webfont.woff","modified":0,"renderable":1},{"_id":"themes/pacman/source/font/fontawesome-webfont.woff","path":"font/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/pacman/source/font/FontAwesome.otf","path":"font/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/pacman/source/img/favicon.ico","path":"img/favicon.ico","modified":0,"renderable":1},{"_id":"themes/pacman/source/img/ali.jpg","path":"img/ali.jpg","modified":0,"renderable":1},{"_id":"themes/pacman/source/img/logo.svg","path":"img/logo.svg","modified":0,"renderable":1},{"_id":"themes/pacman/source/img/pacman.jpg","path":"img/pacman.jpg","modified":0,"renderable":1},{"_id":"themes/pacman/source/font/fontawesome-webfont.eot","path":"font/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/pacman/source/img/author.jpg","path":"img/author.jpg","modified":0,"renderable":1},{"_id":"themes/pacman/source/font/fontawesome-webfont.ttf","path":"font/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/pacman/source/font/coveredbyyourgrace-webfont.svg","path":"font/coveredbyyourgrace-webfont.svg","modified":0,"renderable":1},{"_id":"themes/pacman/source/js/jquery-2.1.0.min.js","path":"js/jquery-2.1.0.min.js","modified":0,"renderable":1},{"_id":"themes/pacman/source/fancybox/helpers/fancybox_buttons.png","path":"fancybox/helpers/fancybox_buttons.png","modified":0,"renderable":1},{"_id":"themes/pacman/source/fancybox/helpers/jquery.fancybox-buttons.css","path":"fancybox/helpers/jquery.fancybox-buttons.css","modified":0,"renderable":1},{"_id":"themes/pacman/source/fancybox/helpers/jquery.fancybox-buttons.js","path":"fancybox/helpers/jquery.fancybox-buttons.js","modified":0,"renderable":1},{"_id":"themes/pacman/source/fancybox/helpers/jquery.fancybox-media.js","path":"fancybox/helpers/jquery.fancybox-media.js","modified":0,"renderable":1},{"_id":"themes/pacman/source/fancybox/helpers/jquery.fancybox-thumbs.css","path":"fancybox/helpers/jquery.fancybox-thumbs.css","modified":0,"renderable":1},{"_id":"themes/pacman/source/fancybox/helpers/jquery.fancybox-thumbs.js","path":"fancybox/helpers/jquery.fancybox-thumbs.js","modified":0,"renderable":1},{"_id":"themes/pacman/source/font/fontawesome-webfont.svg","path":"font/fontawesome-webfont.svg","modified":0,"renderable":1}],"Cache":[{"_id":"themes/pacman/LICENSE","hash":"0138565d68df6e5536667ad445232981ea808aec","modified":1463929994439},{"_id":"themes/pacman/README.md","hash":"d7efa5614e13f8fc7db5e9030e4cc2b27c2df171","modified":1463929994439},{"_id":"themes/pacman/_config.yml","hash":"4d10cb9fb87ca13cc097410957982e7b824311fd","modified":1464014251163},{"_id":"source/_posts/canvas实现画板功能.md","hash":"e79ca4dacfddc07174fc57f228e88981bc758287","modified":1470859234161},{"_id":"source/_posts/hello-world.md","hash":"8a02477044e2b77f1b262da2c48c01429e4a32e4","modified":1463864219224},{"_id":"source/_posts/webpack简单配置篇.md","hash":"b1e755337463e626c739a6a576fa9609b221008b","modified":1475601663504},{"_id":"source/_posts/我的第一篇hexo博客.md","hash":"9daf2af99ed9b208f7001eacdf81316e0bb76080","modified":1464009709487},{"_id":"source/about/index.md","hash":"7ace05d15a37c68267411183dd504069c7894a7b","modified":1464003154207},{"_id":"source/categories/index.md","hash":"4a12bf59b431153c306a6adfd4573a7adf42e420","modified":1463974517001},{"_id":"source/tags/index.md","hash":"fb619d012f7bbcf330f0a1b23690f35e973a1cc1","modified":1463974522641},{"_id":"themes/pacman/.git/config","hash":"cf702459b720c38caf69c5f987e8b60273b832f9","modified":1463929994435},{"_id":"themes/pacman/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1463929994431},{"_id":"themes/pacman/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1463929961891},{"_id":"themes/pacman/.git/index","hash":"2936fa5e079d1e5c69f58c7330dd3523779c2c16","modified":1463929994447},{"_id":"themes/pacman/.git/packed-refs","hash":"e45d41cd8a82b23bb1e924b8f9212cfc77f36e07","modified":1463929994431},{"_id":"themes/pacman/languages/default.yml","hash":"7e9594aa9551cd4841905b4b4d4fcabc2b40e447","modified":1463929994439},{"_id":"themes/pacman/languages/zh-CN.yml","hash":"651f66a6eea73fca9924f8bb7afcc2d644bc0145","modified":1464011410371},{"_id":"themes/pacman/languages/zh-TW.yml","hash":"48b652fa2eb73f9f7cd512472d0cb20057152aea","modified":1463929994439},{"_id":"themes/pacman/layout/archive.ejs","hash":"a18842e3d719fe3ca9b977a6995f8facc75c8673","modified":1463929994439},{"_id":"themes/pacman/layout/category.ejs","hash":"9b740fc33f6f028df60f0bc4312bf3ebd03aa8ea","modified":1463929994439},{"_id":"themes/pacman/layout/index.ejs","hash":"774f7e89d05e9a9b43970a873d5100ad5c9d21ba","modified":1463929994439},{"_id":"themes/pacman/layout/layout.ejs","hash":"87b543229bec7e77cc0ec68cfdd11f2f33df4a1b","modified":1463929994439},{"_id":"themes/pacman/layout/page.ejs","hash":"bd6bbf2ea8e183bd835867ff617dc6366b56748c","modified":1463929994439},{"_id":"themes/pacman/layout/post.ejs","hash":"3114134775bdde5a83cf14feb019606fa2b2b2be","modified":1463929994439},{"_id":"themes/pacman/layout/tag.ejs","hash":"45150a2365768b6b67880193c9264ad2bb4814db","modified":1463929994439},{"_id":"themes/pacman/scripts/fancybox.js","hash":"aa411cd072399df1ddc8e2181a3204678a5177d9","modified":1463929994439},{"_id":"themes/pacman/.git/hooks/applypatch-msg.sample","hash":"86b9655a9ebbde13ac8dd5795eb4d5b539edab0f","modified":1463929961895},{"_id":"themes/pacman/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1463929961895},{"_id":"themes/pacman/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1463929961895},{"_id":"themes/pacman/.git/hooks/pre-applypatch.sample","hash":"42fa41564917b44183a50c4d94bb03e1768ddad8","modified":1463929961895},{"_id":"themes/pacman/.git/hooks/pre-commit.sample","hash":"36aed8976dcc08b5076844f0ec645b18bc37758f","modified":1463929961895},{"_id":"themes/pacman/.git/hooks/pre-push.sample","hash":"b4ad74c989616b7395dc6c9fce9871bb1e86dfb5","modified":1463929961895},{"_id":"themes/pacman/.git/hooks/pre-rebase.sample","hash":"18be3eb275c1decd3614e139f5a311b75f1b0ab8","modified":1463929961895},{"_id":"themes/pacman/.git/hooks/prepare-commit-msg.sample","hash":"2b6275eda365cad50d167fe3a387c9bc9fedd54f","modified":1463929961895},{"_id":"themes/pacman/.git/hooks/update.sample","hash":"39355a075977d05708ef74e1b66d09a36e486df1","modified":1463929961895},{"_id":"themes/pacman/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1463929961895},{"_id":"themes/pacman/.git/logs/HEAD","hash":"c35cdd1c178fe1cd40cfb0dc2319d23a544c1539","modified":1463929994431},{"_id":"themes/pacman/layout/_partial/after_footer.ejs","hash":"af5d700c7e22e364216535142bc0adc798fac22f","modified":1463929994439},{"_id":"themes/pacman/layout/_partial/archive.ejs","hash":"a1ada891cbacf49b397cfa7dd921bdd0ae545a4e","modified":1464011147695},{"_id":"themes/pacman/layout/_partial/article.ejs","hash":"38837fc6a1a799e83b8a75db642b0daf1ff81828","modified":1464010376531},{"_id":"themes/pacman/layout/_partial/categories.ejs","hash":"8a52d0344d5bce1925cf586ed73c11192925209b","modified":1463929994439},{"_id":"themes/pacman/layout/_partial/footer.ejs","hash":"c6f74c66bccc54ec686397bff2c6615718abb1f1","modified":1463969275729},{"_id":"themes/pacman/layout/_partial/google_analytics.ejs","hash":"b6871f67c87c87acb5295ce4fb673b16a7296a01","modified":1463929994439},{"_id":"themes/pacman/layout/_partial/head.ejs","hash":"f21fc1b1c16498610a44a552d23059d338f34d2a","modified":1463930424315},{"_id":"themes/pacman/layout/_partial/header.ejs","hash":"4ff69c32752c54a9f38f99ccc9f14a7f6986deb0","modified":1463970146393},{"_id":"themes/pacman/layout/_partial/pagination.ejs","hash":"6146ac37dfb4f8613090bc52b3fc8cfa911a186a","modified":1464011711179},{"_id":"themes/pacman/layout/_partial/search.ejs","hash":"aed90406246cc43f60dda8cd6558e9eccee342a4","modified":1463929994439},{"_id":"themes/pacman/layout/_partial/sidebar.ejs","hash":"b5aeaab660a18b7a4da568f015e61260eb478916","modified":1463929994439},{"_id":"themes/pacman/layout/_partial/tags.ejs","hash":"b33b2b5d08f1d53a8de25a95f660f7f1cea7b3cb","modified":1463929994439},{"_id":"themes/pacman/layout/_widget/archive.ejs","hash":"39ea6b7888406fbd1b4cf236ebd718e881493374","modified":1463929994439},{"_id":"themes/pacman/layout/_widget/category.ejs","hash":"9b4cc6be18aa6c5da4cf45913d5be83fc33081db","modified":1463929994439},{"_id":"themes/pacman/layout/_widget/links.ejs","hash":"3635a1a407fde93a3be58178b85f51ceb8b87f15","modified":1463929994439},{"_id":"themes/pacman/layout/_widget/rss.ejs","hash":"0a4b5f2a2e36a1d504fe2e7c6c8372cbb4628aab","modified":1463929994439},{"_id":"themes/pacman/layout/_widget/tag.ejs","hash":"cc97db230f727c27519298166ad904358811fb53","modified":1463929994439},{"_id":"themes/pacman/layout/_widget/tagcloud.ejs","hash":"10a1001189d5c28ce6d42494563b9637c302b454","modified":1463929994439},{"_id":"themes/pacman/source/css/style.styl","hash":"b096cc43460e68004bbef41229f67420b5816637","modified":1463929994439},{"_id":"themes/pacman/source/fancybox/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1463929994439},{"_id":"themes/pacman/source/fancybox/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1463929994439},{"_id":"themes/pacman/source/fancybox/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1463929994443},{"_id":"themes/pacman/source/fancybox/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1463929994443},{"_id":"themes/pacman/source/fancybox/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1463929994443},{"_id":"themes/pacman/source/fancybox/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1463929994443},{"_id":"themes/pacman/source/fancybox/jquery.fancybox.css","hash":"aaa582fb9eb4b7092dc69fcb2d5b1c20cca58ab6","modified":1463929994443},{"_id":"themes/pacman/source/fancybox/jquery.fancybox.js","hash":"d08b03a42d5c4ba456ef8ba33116fdbb7a9cabed","modified":1463929994443},{"_id":"themes/pacman/source/fancybox/jquery.fancybox.pack.js","hash":"9e0d51ca1dbe66f6c0c7aefd552dc8122e694a6e","modified":1463929994443},{"_id":"themes/pacman/source/font/coveredbyyourgrace-webfont.eot","hash":"a17d0f10534303e40f210c506ebb8703fa23b7de","modified":1463929994443},{"_id":"themes/pacman/source/font/coveredbyyourgrace-webfont.ttf","hash":"194ccb4acf77a03dc25bcc174edb266143704fec","modified":1463929994443},{"_id":"themes/pacman/source/font/coveredbyyourgrace-webfont.woff","hash":"c6f8dc1a2f6ce914f120e80a876b8fd77b98888e","modified":1463929994443},{"_id":"themes/pacman/source/font/fontawesome-webfont.woff","hash":"04c3bf56d87a0828935bd6b4aee859995f321693","modified":1463929994447},{"_id":"themes/pacman/source/font/FontAwesome.otf","hash":"b5b4f9be85f91f10799e87a083da1d050f842734","modified":1463929994443},{"_id":"themes/pacman/source/img/favicon.ico","hash":"fa2c03e9eb35f2f423a1c85c85c278649a857532","modified":1463929994447},{"_id":"themes/pacman/source/img/ali.jpg","hash":"e78e965588822d8ef8cd817f070233065f713cad","modified":1464013541000},{"_id":"themes/pacman/source/img/logo.svg","hash":"cef3f0bb4bf3661dd3a58c81b9a7be79601a0bfb","modified":1463929994447},{"_id":"themes/pacman/source/img/pacman.jpg","hash":"7e873f2f40a52f8c679302b88bb0809a6abafe5c","modified":1463929994447},{"_id":"themes/pacman/source/font/fontawesome-webfont.eot","hash":"7619748fe34c64fb157a57f6d4ef3678f63a8f5e","modified":1463929994443},{"_id":"themes/pacman/source/img/author.jpg","hash":"78f534fbda5eb4fdb4e4ce01dce0bfc39e2f729d","modified":1463929994447},{"_id":"themes/pacman/source/font/fontawesome-webfont.ttf","hash":"7f09c97f333917034ad08fa7295e916c9f72fd3f","modified":1463929994447},{"_id":"themes/pacman/source/font/coveredbyyourgrace-webfont.svg","hash":"eabdb262d8e246865dfb56031f01ff6e8d2f9d53","modified":1463929994443},{"_id":"themes/pacman/source/js/jquery-2.1.0.min.js","hash":"98884258cbdb0d939fa2c5e74fc7ac9e56d8170f","modified":1463929994447},{"_id":"themes/pacman/.git/objects/pack/pack-7c351c8ab14069608894bbce1a79503bb4be266f.idx","hash":"8c9b89254e8db364550b724f9a6cfbb35413b7c7","modified":1463929994315},{"_id":"themes/pacman/.git/refs/heads/master","hash":"70324d8fb61c49f6ec262f392ff6cff3ac8f80ca","modified":1463929994431},{"_id":"themes/pacman/layout/_partial/post/article.ejs","hash":"ec5e8f66886dedf35b9a5746d11fe0dc4a7ab68f","modified":1463929994439},{"_id":"themes/pacman/layout/_partial/post/catetags.ejs","hash":"f6b107078094333b6567d4a97700f559159675e1","modified":1463929994439},{"_id":"themes/pacman/layout/_partial/post/comment.ejs","hash":"5c0afcd1fd1d7b4e8335f76bc181b8e72ffed38e","modified":1463929994439},{"_id":"themes/pacman/layout/_partial/post/footer.ejs","hash":"a9aeae612eb7085bbe74bd12086198320e6c3702","modified":1463929994439},{"_id":"themes/pacman/layout/_partial/post/gallery.ejs","hash":"7ca5b1db9439be61a8b77f6f7d857b56fdf1517f","modified":1463929994439},{"_id":"themes/pacman/layout/_partial/post/header.ejs","hash":"2097d232fdb6408789085d6f050ddce799851029","modified":1464012354207},{"_id":"themes/pacman/layout/_partial/post/jiathis.ejs","hash":"adc047d2bbd031092df86f3be2866ea9c3b5f3c9","modified":1463929994439},{"_id":"themes/pacman/layout/_partial/post/pagination.ejs","hash":"7d0bbc90e51e6347b8c697263575fad3e437fab2","modified":1464012174511},{"_id":"themes/pacman/source/css/_base/code.styl","hash":"48ff38e4f320d301bd48c8c1b29fee26ede958bb","modified":1464007060051},{"_id":"themes/pacman/source/css/_base/font.styl","hash":"75f264bc742888dbe192e8d19eda70705d13c709","modified":1463929994439},{"_id":"themes/pacman/source/css/_base/public.styl","hash":"29deec49b60533cc4196175345eaa4b2d611a97e","modified":1463929994439},{"_id":"themes/pacman/source/css/_base/variable.styl","hash":"6bae6a72e2f016ed32aaf95f98a2506d44cc1894","modified":1464006786143},{"_id":"themes/pacman/source/css/_partial/article.styl","hash":"db1332f23ef7aca4b4567f922e7ba4cb710370f9","modified":1464007031035},{"_id":"themes/pacman/source/css/_partial/aside.styl","hash":"8fb8c2172883913b404f8e49e181103317486ecc","modified":1463929994439},{"_id":"themes/pacman/source/css/_partial/duoshuo.styl","hash":"e85f1192283f043115c272a9deb3cb6ced793990","modified":1463929994439},{"_id":"themes/pacman/source/css/_partial/footer.styl","hash":"315ac179b862e25b45cedde24b0457bda59e4b73","modified":1463969598433},{"_id":"themes/pacman/source/css/_partial/gallery.styl","hash":"a544a58fdb4c8dd8274159323abd1e38cb03215e","modified":1463929994439},{"_id":"themes/pacman/source/css/_partial/header.styl","hash":"f6890aa301292a30aa2bf99e23c76c08dbe3bd54","modified":1464013863375},{"_id":"themes/pacman/source/css/_partial/helper.styl","hash":"52d4ee51b7087c2c2a7e7ded6f63270165d9de89","modified":1463929994439},{"_id":"themes/pacman/source/css/_partial/index.styl","hash":"0d219fc6fb76c0d4ffd1dc2a119969d78a157285","modified":1463929994439},{"_id":"themes/pacman/source/fancybox/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1463929994443},{"_id":"themes/pacman/source/fancybox/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1463929994443},{"_id":"themes/pacman/source/fancybox/helpers/jquery.fancybox-buttons.js","hash":"dc3645529a4bf72983a39fa34c1eb9146e082019","modified":1463929994443},{"_id":"themes/pacman/source/fancybox/helpers/jquery.fancybox-media.js","hash":"294420f9ff20f4e3584d212b0c262a00a96ecdb3","modified":1463929994443},{"_id":"themes/pacman/source/fancybox/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1463929994443},{"_id":"themes/pacman/source/fancybox/helpers/jquery.fancybox-thumbs.js","hash":"47da1ae5401c24b5c17cc18e2730780f5c1a7a0c","modified":1463929994443},{"_id":"themes/pacman/source/font/fontawesome-webfont.svg","hash":"46fcc0194d75a0ddac0a038aee41b23456784814","modified":1463929994443},{"_id":"themes/pacman/.git/logs/refs/heads/master","hash":"c35cdd1c178fe1cd40cfb0dc2319d23a544c1539","modified":1463929994431},{"_id":"themes/pacman/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1463929994431},{"_id":"themes/pacman/.git/logs/refs/remotes/origin/HEAD","hash":"c35cdd1c178fe1cd40cfb0dc2319d23a544c1539","modified":1463929994431},{"_id":"themes/pacman/.git/objects/pack/pack-7c351c8ab14069608894bbce1a79503bb4be266f.pack","hash":"d3c1f826f29cd06353ee52e307e6c5ec3f7134ca","modified":1463929994315},{"_id":"public/about/index.html","hash":"17268f5a1419e0a7ddc56a85f84c9c388fea4591","modified":1475601612132},{"_id":"public/categories/index.html","hash":"0717ddb8e5ea9d370fb6d3193dd3b9aa062c6e85","modified":1475601612132},{"_id":"public/tags/index.html","hash":"d96d8506b491645e134204cbe372817b76c7f51f","modified":1475601612133},{"_id":"public/2016/05/23/我的第一篇hexo博客/index.html","hash":"142c73e09648c030e945e0ec5626e306e5aff5bb","modified":1475601612133},{"_id":"public/2016/05/22/hello-world/index.html","hash":"661983742481a10bd1c828d1a34a9c805fd091cb","modified":1475601612133},{"_id":"public/archives/index.html","hash":"8b000fdbae4eed9f9fd28f4fe2144d4c1079c3aa","modified":1475601612133},{"_id":"public/archives/2016/index.html","hash":"b27d3b3023913310bdf9828912e74b757c715b00","modified":1475601612133},{"_id":"public/archives/2016/05/index.html","hash":"1204a969e149632dbee147211e9efa2efda02d51","modified":1475601612133},{"_id":"public/archives/2016/08/index.html","hash":"6d7b9da433a8999d44c92836a687f95b2d0fe175","modified":1475601612133},{"_id":"public/categories/Html5/index.html","hash":"edc97912381f29090f6beaaa3c7332259892cdea","modified":1475601612133},{"_id":"public/categories/博客/index.html","hash":"b69554264ddd222b926c558d43555d1bbb9b37e7","modified":1475601612133},{"_id":"public/tags/canvas/index.html","hash":"45e2467b1e0a023686707b7ed1f9898e96aaba1c","modified":1475601612133},{"_id":"public/tags/hexo/index.html","hash":"af9acf09ec3ba0c8971328b4e20094c8bbb7c1fd","modified":1475601612133},{"_id":"public/index.html","hash":"fc9242c6365423b85638935e9c4e923956a3fe1a","modified":1475601612133},{"_id":"public/2016/08/11/canvas实现画板功能/index.html","hash":"822d2b9786a5e5968b3abc560af5d5f66985f193","modified":1475601612134},{"_id":"public/fancybox/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1475601612141},{"_id":"public/fancybox/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1475601612141},{"_id":"public/fancybox/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1475601612141},{"_id":"public/fancybox/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1475601612141},{"_id":"public/fancybox/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1475601612141},{"_id":"public/fancybox/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1475601612141},{"_id":"public/font/coveredbyyourgrace-webfont.eot","hash":"a17d0f10534303e40f210c506ebb8703fa23b7de","modified":1475601612142},{"_id":"public/font/coveredbyyourgrace-webfont.ttf","hash":"194ccb4acf77a03dc25bcc174edb266143704fec","modified":1475601612142},{"_id":"public/font/coveredbyyourgrace-webfont.woff","hash":"c6f8dc1a2f6ce914f120e80a876b8fd77b98888e","modified":1475601612142},{"_id":"public/font/fontawesome-webfont.woff","hash":"04c3bf56d87a0828935bd6b4aee859995f321693","modified":1475601612142},{"_id":"public/img/favicon.ico","hash":"fa2c03e9eb35f2f423a1c85c85c278649a857532","modified":1475601612142},{"_id":"public/font/FontAwesome.otf","hash":"b5b4f9be85f91f10799e87a083da1d050f842734","modified":1475601612142},{"_id":"public/img/ali.jpg","hash":"e78e965588822d8ef8cd817f070233065f713cad","modified":1475601612142},{"_id":"public/img/logo.svg","hash":"cef3f0bb4bf3661dd3a58c81b9a7be79601a0bfb","modified":1475601612142},{"_id":"public/img/pacman.jpg","hash":"7e873f2f40a52f8c679302b88bb0809a6abafe5c","modified":1475601612142},{"_id":"public/font/fontawesome-webfont.eot","hash":"7619748fe34c64fb157a57f6d4ef3678f63a8f5e","modified":1475601612142},{"_id":"public/img/author.jpg","hash":"78f534fbda5eb4fdb4e4ce01dce0bfc39e2f729d","modified":1475601612142},{"_id":"public/fancybox/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1475601612142},{"_id":"public/font/fontawesome-webfont.ttf","hash":"7f09c97f333917034ad08fa7295e916c9f72fd3f","modified":1475601612698},{"_id":"public/font/coveredbyyourgrace-webfont.svg","hash":"eabdb262d8e246865dfb56031f01ff6e8d2f9d53","modified":1475601612701},{"_id":"public/fancybox/jquery.fancybox.css","hash":"aaa582fb9eb4b7092dc69fcb2d5b1c20cca58ab6","modified":1475601612704},{"_id":"public/fancybox/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1475601612704},{"_id":"public/fancybox/helpers/jquery.fancybox-buttons.js","hash":"dc3645529a4bf72983a39fa34c1eb9146e082019","modified":1475601612704},{"_id":"public/fancybox/helpers/jquery.fancybox-media.js","hash":"294420f9ff20f4e3584d212b0c262a00a96ecdb3","modified":1475601612705},{"_id":"public/fancybox/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1475601612705},{"_id":"public/fancybox/helpers/jquery.fancybox-thumbs.js","hash":"47da1ae5401c24b5c17cc18e2730780f5c1a7a0c","modified":1475601612705},{"_id":"public/css/style.css","hash":"736ff38f93e86f10a072cf87d6975b9219f1595c","modified":1475601612705},{"_id":"public/fancybox/jquery.fancybox.js","hash":"d08b03a42d5c4ba456ef8ba33116fdbb7a9cabed","modified":1475601612705},{"_id":"public/fancybox/jquery.fancybox.pack.js","hash":"9e0d51ca1dbe66f6c0c7aefd552dc8122e694a6e","modified":1475601612705},{"_id":"public/js/jquery-2.1.0.min.js","hash":"98884258cbdb0d939fa2c5e74fc7ac9e56d8170f","modified":1475601612705},{"_id":"public/font/fontawesome-webfont.svg","hash":"46fcc0194d75a0ddac0a038aee41b23456784814","modified":1475601612708}],"Category":[{"name":"Html5","_id":"citvr1s900005qr1dvn34oxdd"},{"name":"博客","_id":"citvr1s980009qr1da1v3d7qm"}],"Data":[],"Page":[{"title":"关于我","date":"2016-05-23T02:28:16.000Z","keywords":null,"description":null,"_content":"\n\n","source":"about/index.md","raw":"---\ntitle: 关于我\ndate: 2016-05-23 10:28:16\nkeywords:\ndescription:\n---\n\n\n","updated":"2016-05-23T11:32:34.207Z","path":"about/index.html","comments":1,"layout":"page","_id":"citvr1s8o0001qr1duaovwyb6","content":"","excerpt":"","more":""},{"title":"categories","date":"2016-05-23T03:34:45.000Z","type":"categories","_content":"","source":"categories/index.md","raw":"---\ntitle: categories\ndate: 2016-05-23 11:34:45\ntype: \"categories\"\n---\n","updated":"2016-05-23T03:35:17.001Z","path":"categories/index.html","comments":1,"layout":"page","_id":"citvr1s8v0003qr1dks48zb4q","content":"","excerpt":"","more":""},{"title":"tags","date":"2016-05-23T03:24:35.000Z","type":"tags","_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2016-05-23 11:24:35\ntype: \"tags\"\n---\n","updated":"2016-05-23T03:35:22.641Z","path":"tags/index.html","comments":1,"layout":"page","_id":"citvr1s940007qr1d7z1hjrg6","content":"","excerpt":"","more":""}],"Post":[{"title":"canvas实现画板功能","date":"2016-08-10T18:29:37.000Z","keywords":"canvas h5 画板","description":"canvas实现画板功能","_content":"canvas实现画板功能\n======\n>需求分析\n>1.具有基本的铅笔功能\n>2.即时直线绘制\n>3.即时绘制矩形\n>4.即时圆形\n>5.即时橡皮擦\n>7.插入图片\n>8.把画板保存为图片并下载  //此处还没做好，画板底色是黑色的\n>9.选择颜色\n>10.选择线条粗细\n\n\nSetp1:构建网页基本样式\n-----\n>html代码\n```html\n    <!--可选操作-->\n    <div id=\"select\">\n        <button id=\"pen\">铅笔</button>\n        <button id=\"line\">直线</button>\n        <button id=\"rect\">矩形</button>\n        <button id=\"arc\">圆形</button>\n        <button id=\"robber\">橡皮檫</button>\n        <button id=\"img\">图片</button>\n        <button id=\"save\">保存</button>\n        <input type=\"file\" id=\"file\" name=\"img\" style=\"display: none\"/>\n        <input type=\"color\" id=\"color\"/>\n        <input type=\"number\" id=\"lineWidth\"/>\n    </div>\n\n    <!--画板-->\n    <canvas id=\"penal\" width=\"800\" height=\"800\"></canvas>\n```\n\n>css代码\n```css\n    /`只有一句，用来初始化画板颜色`/\n    #penal {\n        width: 800px;\n        height: 800px;\n        background-color: #ccc;\n    }\n```\nStep2:构造实现画板各个功能的js代码\n---\n>1.构造`Draw()`类，并初始化必要的参数\n```js\n    var Draw = function(){\n        this.type = 'pen';  //选项类型，默认为铅笔\n        this.penal = document.getElementById('penal');\n        this.pen = this.penal.getContext('2d');\n        this.isDraw = false;    //绘画开关\n        this.color = document.getElementById('color');\n        this.lineWidth = document.getElementById('lineWidth');\n        this.select = document.getElementById('select');    //选择面板\n        this.img = new Image();//用于动态绘制直线，矩形，圆形\n    };\n```\n>2.这里只需要构造一个初始化函数`init()`\n\n>>初始化函数内部需要用到的变量\n```js\n    Draw.prototype.init = function(){\n        var self = this;\n        var originX = null;\n        var originY = null;\n    }\n````\n\n>>先绑定选择操作\n```js\n    this.select.addEventListener('click',function(event){\n        if(event.target.id == 'pen'){\n            self.type = 'pen';\n        }else if(event.target.id == 'line'){\n            self.type = 'line';\n        }else if(event.target.id == 'rect'){\n            self.type = 'rect';\n        }else if(event.target.id == 'arc'){\n            self.type = 'arc';\n        }else if(event.target.id == 'robber'){\n            self.type = 'robber';\n        }else if(event.target.id == 'img'){\n            document.getElementById('file').click();    //默认触发选择文件操作\n            document.getElementById('file').onchange = function(e){\n                var reader = new FileReader();          //这是H5新增加的读取文件函数\n                reader.readAsDataURL(e.target.files[0]);\n                reader.onload = function(ent){          //文件读取完毕后触发操作\n                    var img = new Image();\n                    img.src = ent.target.result;        //读取的结果默认存放在result上\n                    self.pen.drawImage(img,0,0);        //把图片直接画在画布上\n                }\n            }\n        }\n        else if(event.target.id == 'save'){\n            var a = document.createElement('a');\n            a.href = self.penal.toDataURL('image/png');     //把画布转化为base64\n            a.download = 'image.jpeg';\n            a.id = 'download';\n            a.innerHTML = 'download';\n            document.body.appendChild(a);\n            document.getElementById('download').style.display = 'none';\n            document.getElementById('download').click();    //默认出发下载操作\n\n        }\n    },false);\n```\n\n>>可以知道当绘画时，`mousedown`事件触发时，需要把`this.isDraw = true`,同时记录鼠标所在坐标，获取选择的`color`和`linewidth`,并开启绘画路径\n```js\n    this.penal.addEventListener('mousedown',function(event){\n        self.isDraw = true;\n        originX = event.clientX - self.penal.offsetLeft;    //原点x坐标\n        originY = event.clientY - self.penal.offsetTop;     //原点y坐标\n        self.pen.moveTo(originX, originY);\n        self.pen.strokeStyle = self.color.value;\n        self.pen.lineWidth = self.lineWidth.value;\n        self.pen.beginPath();\n\n    },false);\n```\n>>然后当触发`mouseup`事件时，可知需要结束绘画，若鼠标离开画布，即`mouseleave`时，也需要结束绘画，这部分很简单只需把`this.isDraw = false`和关闭绘画路径\n```js\n    this.penal.addEventListener('mouseleave', function () {\n        if(self.isDraw){\n            self.pen.closePath();\n            self.isDraw = false;\n        }\n    },false);\n    this.penal.addEventListener('mouseup', function (event) {\n        if(self.isDraw){\n            self.pen.closePath();\n            self.isDraw = false;\n        }\n    },false);\n```\n>>接下来就是最难的部分的，当`mouseover`时，需要即时绘制\n>>>先实现铅笔功能\n```js\n    this.penal.addEventListener('mousemove',function(event){\n        //只有可绘画时才可画\n        if(self.isDraw){\n            var x = event.clientX - self.penal.offsetLeft;  //移动过程中的x坐标\n            var y = event.clientY - self.penal.offsetTop;   //移动过程中的y坐标\n\n            if(self.type == 'pen'){\n                self.pen.lineTo(x,y);\n                self.pen.stroke();\n            }\n        }\n    },false);\n```\n>>>接下来实现橡皮擦功能，实现方法是把绘画线条加粗，并颜色默认选择画布底色\n```js\n    if(self.type == 'robber'){\n         self.pen.strokeStyle = '#ccc';\n         self.pen.clearRect(x-10,y-10,20,20);\n    }\n```\n>>>接下来实现绘制直线，矩形和圆形的方法其实大同小异,然后为了能让我们画矩形和圆形能在所有方向都能画，我们增加了`newOriginX`和`newOriginY`两个变量\n```js\n    var newOriginX  = originX,newOriginY = originY;\n\n    if(self.type == 'line'){\n        self.pen.moveTo(originX,originY);\n        self.pen.lineTo(x,y);\n        self.pen.stroke();\n\n    }else if(self.type == 'rect'){\n        if(x < originX){\n            newOriginX = x;\n        }\n        if(y < originY){\n            newOriginY = y;\n        }\n        self.pen.rect(newOriginX,newOriginY,Math.abs(x-originX),Math.abs(y-originY));\n        self.pen.stroke();\n    }else if(self.type == 'arc'){\n        if(x < originX){\n            newOriginX = x;\n        }\n        if(y < originY){\n            newOriginY = y;\n        }\n        var r = Math.sqrt(Math.abs(x-originX) * Math.abs(x-originX) + Math.abs(y-originY) * Math.abs(y-originY))\n        self.pen.arc(Math.abs(x-originX)+newOriginX, Math.abs(y-originY)+newOriginY , r, 0, 2*Math.PI);\n        self.pen.fillStyle = self.color.value;\n        self.pen.fill();\n    }\n```\n>>>`question:`此时我们发现画的直线，矩形和圆形都会在画的时候留下移动的痕迹，这不是我们希望的结果，所以解决方法是：\n>>>在`mousedown`时，把当前画布内容保存为图片，并用初始化时一直没有使用过的`this.img`来保存，然后每次画直线等的时候先把画布全部清空，然后在把`this.img`画到画布上\n>>>把原来的`mousedown`事件添加一句代码\n```js\n    this.penal.addEventListener('mousedown',function(event){\n        self.isDraw = true;\n\n        //增加一句代码\n        self.img.src = self.penal.toDataURL('image/png');\n\n        originX = event.clientX - self.penal.offsetLeft;    //原点x坐标\n        originY = event.clientY - self.penal.offsetTop;     //原点y坐标\n        self.pen.moveTo(originX, originY);\n        self.pen.strokeStyle = self.color.value;\n        self.pen.lineWidth = self.lineWidth.value;\n        self.pen.beginPath();\n\n    },false);\n```\n>>>把`mouseover`事件的代码稍作更改\n```js\n    if(self.type == 'line'){\n\n        self.pen.clearRect(0,0,800,800);//增加代码\n        self.pen.drawImage(self.img, 0, 0);//增加代码\n        self.pen.beginPath();//增加代码\n\n        self.pen.moveTo(originX,originY);\n        self.pen.lineTo(x,y);\n        self.pen.stroke();\n\n        self.pen.closePath();//增加代码\n    }else if(self.type == 'rect'){\n        self.pen.clearRect(0,0,800,800);//增加代码\n        self.pen.drawImage(self.img, 0, 0);//增加代码\n        self.pen.beginPath();//增加代码\n\n        if(x < originX){\n            newOriginX = x;\n        }\n        if(y < originY){\n            newOriginY = y;\n        }\n        self.pen.rect(newOriginX,newOriginY,Math.abs(x-originX),Math.abs(y-originY));\n        self.pen.stroke();\n\n        self.pen.closePath();//增加代码\n    }else if(self.type == 'arc'){\n        self.pen.clearRect(0,0,800,800);//增加代码\n        self.pen.drawImage(self.img, 0, 0);//增加代码\n        self.pen.beginPath();//增加代码\n\n        if(x < originX){\n            newOriginX = x;\n        }\n        if(y < originY){\n            newOriginY = y;\n        }\n        var r = Math.sqrt(Math.abs(x-originX) * Math.abs(x-originX) + Math.abs(y-originY) * Math.abs(y-originY))\n        self.pen.arc(Math.abs(x-originX)+newOriginX, Math.abs(y-originY)+newOriginY , r, 0, 2*Math.PI);\n        self.pen.fillStyle = self.color.value;\n        self.pen.fill();\n        self.pen.closePath();//增加代码\n    }\n```\nStep3:加载js文件\n---\n```html\n    <script src=\"draw.js\"></script>\n    <script>\n        window.onload = function (){\n            var draw = new Draw();\n            draw.init();\n        };\n    </script>\n```\n最后简单的画板功能就是实现了，如有不足之处请指出\n","source":"_posts/canvas实现画板功能.md","raw":"---\ntitle: canvas实现画板功能\ndate: 2016-08-11 02:29:37\ntags: canvas\ncategories: Html5\nkeywords: canvas h5 画板\ndescription: canvas实现画板功能\n---\ncanvas实现画板功能\n======\n>需求分析\n>1.具有基本的铅笔功能\n>2.即时直线绘制\n>3.即时绘制矩形\n>4.即时圆形\n>5.即时橡皮擦\n>7.插入图片\n>8.把画板保存为图片并下载  //此处还没做好，画板底色是黑色的\n>9.选择颜色\n>10.选择线条粗细\n\n\nSetp1:构建网页基本样式\n-----\n>html代码\n```html\n    <!--可选操作-->\n    <div id=\"select\">\n        <button id=\"pen\">铅笔</button>\n        <button id=\"line\">直线</button>\n        <button id=\"rect\">矩形</button>\n        <button id=\"arc\">圆形</button>\n        <button id=\"robber\">橡皮檫</button>\n        <button id=\"img\">图片</button>\n        <button id=\"save\">保存</button>\n        <input type=\"file\" id=\"file\" name=\"img\" style=\"display: none\"/>\n        <input type=\"color\" id=\"color\"/>\n        <input type=\"number\" id=\"lineWidth\"/>\n    </div>\n\n    <!--画板-->\n    <canvas id=\"penal\" width=\"800\" height=\"800\"></canvas>\n```\n\n>css代码\n```css\n    /`只有一句，用来初始化画板颜色`/\n    #penal {\n        width: 800px;\n        height: 800px;\n        background-color: #ccc;\n    }\n```\nStep2:构造实现画板各个功能的js代码\n---\n>1.构造`Draw()`类，并初始化必要的参数\n```js\n    var Draw = function(){\n        this.type = 'pen';  //选项类型，默认为铅笔\n        this.penal = document.getElementById('penal');\n        this.pen = this.penal.getContext('2d');\n        this.isDraw = false;    //绘画开关\n        this.color = document.getElementById('color');\n        this.lineWidth = document.getElementById('lineWidth');\n        this.select = document.getElementById('select');    //选择面板\n        this.img = new Image();//用于动态绘制直线，矩形，圆形\n    };\n```\n>2.这里只需要构造一个初始化函数`init()`\n\n>>初始化函数内部需要用到的变量\n```js\n    Draw.prototype.init = function(){\n        var self = this;\n        var originX = null;\n        var originY = null;\n    }\n````\n\n>>先绑定选择操作\n```js\n    this.select.addEventListener('click',function(event){\n        if(event.target.id == 'pen'){\n            self.type = 'pen';\n        }else if(event.target.id == 'line'){\n            self.type = 'line';\n        }else if(event.target.id == 'rect'){\n            self.type = 'rect';\n        }else if(event.target.id == 'arc'){\n            self.type = 'arc';\n        }else if(event.target.id == 'robber'){\n            self.type = 'robber';\n        }else if(event.target.id == 'img'){\n            document.getElementById('file').click();    //默认触发选择文件操作\n            document.getElementById('file').onchange = function(e){\n                var reader = new FileReader();          //这是H5新增加的读取文件函数\n                reader.readAsDataURL(e.target.files[0]);\n                reader.onload = function(ent){          //文件读取完毕后触发操作\n                    var img = new Image();\n                    img.src = ent.target.result;        //读取的结果默认存放在result上\n                    self.pen.drawImage(img,0,0);        //把图片直接画在画布上\n                }\n            }\n        }\n        else if(event.target.id == 'save'){\n            var a = document.createElement('a');\n            a.href = self.penal.toDataURL('image/png');     //把画布转化为base64\n            a.download = 'image.jpeg';\n            a.id = 'download';\n            a.innerHTML = 'download';\n            document.body.appendChild(a);\n            document.getElementById('download').style.display = 'none';\n            document.getElementById('download').click();    //默认出发下载操作\n\n        }\n    },false);\n```\n\n>>可以知道当绘画时，`mousedown`事件触发时，需要把`this.isDraw = true`,同时记录鼠标所在坐标，获取选择的`color`和`linewidth`,并开启绘画路径\n```js\n    this.penal.addEventListener('mousedown',function(event){\n        self.isDraw = true;\n        originX = event.clientX - self.penal.offsetLeft;    //原点x坐标\n        originY = event.clientY - self.penal.offsetTop;     //原点y坐标\n        self.pen.moveTo(originX, originY);\n        self.pen.strokeStyle = self.color.value;\n        self.pen.lineWidth = self.lineWidth.value;\n        self.pen.beginPath();\n\n    },false);\n```\n>>然后当触发`mouseup`事件时，可知需要结束绘画，若鼠标离开画布，即`mouseleave`时，也需要结束绘画，这部分很简单只需把`this.isDraw = false`和关闭绘画路径\n```js\n    this.penal.addEventListener('mouseleave', function () {\n        if(self.isDraw){\n            self.pen.closePath();\n            self.isDraw = false;\n        }\n    },false);\n    this.penal.addEventListener('mouseup', function (event) {\n        if(self.isDraw){\n            self.pen.closePath();\n            self.isDraw = false;\n        }\n    },false);\n```\n>>接下来就是最难的部分的，当`mouseover`时，需要即时绘制\n>>>先实现铅笔功能\n```js\n    this.penal.addEventListener('mousemove',function(event){\n        //只有可绘画时才可画\n        if(self.isDraw){\n            var x = event.clientX - self.penal.offsetLeft;  //移动过程中的x坐标\n            var y = event.clientY - self.penal.offsetTop;   //移动过程中的y坐标\n\n            if(self.type == 'pen'){\n                self.pen.lineTo(x,y);\n                self.pen.stroke();\n            }\n        }\n    },false);\n```\n>>>接下来实现橡皮擦功能，实现方法是把绘画线条加粗，并颜色默认选择画布底色\n```js\n    if(self.type == 'robber'){\n         self.pen.strokeStyle = '#ccc';\n         self.pen.clearRect(x-10,y-10,20,20);\n    }\n```\n>>>接下来实现绘制直线，矩形和圆形的方法其实大同小异,然后为了能让我们画矩形和圆形能在所有方向都能画，我们增加了`newOriginX`和`newOriginY`两个变量\n```js\n    var newOriginX  = originX,newOriginY = originY;\n\n    if(self.type == 'line'){\n        self.pen.moveTo(originX,originY);\n        self.pen.lineTo(x,y);\n        self.pen.stroke();\n\n    }else if(self.type == 'rect'){\n        if(x < originX){\n            newOriginX = x;\n        }\n        if(y < originY){\n            newOriginY = y;\n        }\n        self.pen.rect(newOriginX,newOriginY,Math.abs(x-originX),Math.abs(y-originY));\n        self.pen.stroke();\n    }else if(self.type == 'arc'){\n        if(x < originX){\n            newOriginX = x;\n        }\n        if(y < originY){\n            newOriginY = y;\n        }\n        var r = Math.sqrt(Math.abs(x-originX) * Math.abs(x-originX) + Math.abs(y-originY) * Math.abs(y-originY))\n        self.pen.arc(Math.abs(x-originX)+newOriginX, Math.abs(y-originY)+newOriginY , r, 0, 2*Math.PI);\n        self.pen.fillStyle = self.color.value;\n        self.pen.fill();\n    }\n```\n>>>`question:`此时我们发现画的直线，矩形和圆形都会在画的时候留下移动的痕迹，这不是我们希望的结果，所以解决方法是：\n>>>在`mousedown`时，把当前画布内容保存为图片，并用初始化时一直没有使用过的`this.img`来保存，然后每次画直线等的时候先把画布全部清空，然后在把`this.img`画到画布上\n>>>把原来的`mousedown`事件添加一句代码\n```js\n    this.penal.addEventListener('mousedown',function(event){\n        self.isDraw = true;\n\n        //增加一句代码\n        self.img.src = self.penal.toDataURL('image/png');\n\n        originX = event.clientX - self.penal.offsetLeft;    //原点x坐标\n        originY = event.clientY - self.penal.offsetTop;     //原点y坐标\n        self.pen.moveTo(originX, originY);\n        self.pen.strokeStyle = self.color.value;\n        self.pen.lineWidth = self.lineWidth.value;\n        self.pen.beginPath();\n\n    },false);\n```\n>>>把`mouseover`事件的代码稍作更改\n```js\n    if(self.type == 'line'){\n\n        self.pen.clearRect(0,0,800,800);//增加代码\n        self.pen.drawImage(self.img, 0, 0);//增加代码\n        self.pen.beginPath();//增加代码\n\n        self.pen.moveTo(originX,originY);\n        self.pen.lineTo(x,y);\n        self.pen.stroke();\n\n        self.pen.closePath();//增加代码\n    }else if(self.type == 'rect'){\n        self.pen.clearRect(0,0,800,800);//增加代码\n        self.pen.drawImage(self.img, 0, 0);//增加代码\n        self.pen.beginPath();//增加代码\n\n        if(x < originX){\n            newOriginX = x;\n        }\n        if(y < originY){\n            newOriginY = y;\n        }\n        self.pen.rect(newOriginX,newOriginY,Math.abs(x-originX),Math.abs(y-originY));\n        self.pen.stroke();\n\n        self.pen.closePath();//增加代码\n    }else if(self.type == 'arc'){\n        self.pen.clearRect(0,0,800,800);//增加代码\n        self.pen.drawImage(self.img, 0, 0);//增加代码\n        self.pen.beginPath();//增加代码\n\n        if(x < originX){\n            newOriginX = x;\n        }\n        if(y < originY){\n            newOriginY = y;\n        }\n        var r = Math.sqrt(Math.abs(x-originX) * Math.abs(x-originX) + Math.abs(y-originY) * Math.abs(y-originY))\n        self.pen.arc(Math.abs(x-originX)+newOriginX, Math.abs(y-originY)+newOriginY , r, 0, 2*Math.PI);\n        self.pen.fillStyle = self.color.value;\n        self.pen.fill();\n        self.pen.closePath();//增加代码\n    }\n```\nStep3:加载js文件\n---\n```html\n    <script src=\"draw.js\"></script>\n    <script>\n        window.onload = function (){\n            var draw = new Draw();\n            draw.init();\n        };\n    </script>\n```\n最后简单的画板功能就是实现了，如有不足之处请指出\n","slug":"canvas实现画板功能","published":1,"updated":"2016-08-10T20:00:34.161Z","comments":1,"layout":"post","photos":[],"link":"","_id":"citvr1s8i0000qr1dvyq3rr7n","content":"<h1 id=\"canvas实现画板功能\"><a href=\"#canvas实现画板功能\" class=\"headerlink\" title=\"canvas实现画板功能\"></a>canvas实现画板功能</h1><blockquote>\n<p>需求分析<br>1.具有基本的铅笔功能<br>2.即时直线绘制<br>3.即时绘制矩形<br>4.即时圆形<br>5.即时橡皮擦<br>7.插入图片<br>8.把画板保存为图片并下载  //此处还没做好，画板底色是黑色的<br>9.选择颜色<br>10.选择线条粗细</p>\n</blockquote>\n<h2 id=\"Setp1-构建网页基本样式\"><a href=\"#Setp1-构建网页基本样式\" class=\"headerlink\" title=\"Setp1:构建网页基本样式\"></a>Setp1:构建网页基本样式</h2><blockquote>\n<p>html代码<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!--可选操作--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"select\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">id</span>=<span class=\"string\">\"pen\"</span>&gt;</span>铅笔<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">id</span>=<span class=\"string\">\"line\"</span>&gt;</span>直线<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">id</span>=<span class=\"string\">\"rect\"</span>&gt;</span>矩形<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">id</span>=<span class=\"string\">\"arc\"</span>&gt;</span>圆形<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">id</span>=<span class=\"string\">\"robber\"</span>&gt;</span>橡皮檫<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">id</span>=<span class=\"string\">\"img\"</span>&gt;</span>图片<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">id</span>=<span class=\"string\">\"save\"</span>&gt;</span>保存<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"file\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"file\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"img\"</span> <span class=\"attr\">style</span>=<span class=\"string\">\"display: none\"</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"color\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"color\"</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"number\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"lineWidth\"</span>/&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!--画板--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">canvas</span> <span class=\"attr\">id</span>=<span class=\"string\">\"penal\"</span> <span class=\"attr\">width</span>=<span class=\"string\">\"800\"</span> <span class=\"attr\">height</span>=<span class=\"string\">\"800\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">canvas</span>&gt;</span></span><br></pre></td></tr></table></figure></p>\n<p>css代码<br><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/`只有一句，用来初始化画板颜色`/</span><br><span class=\"line\">#penal &#123;</span><br><span class=\"line\">    width: 800px;</span><br><span class=\"line\">    height: 800px;</span><br><span class=\"line\">    background-color: #ccc;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<h2 id=\"Step2-构造实现画板各个功能的js代码\"><a href=\"#Step2-构造实现画板各个功能的js代码\" class=\"headerlink\" title=\"Step2:构造实现画板各个功能的js代码\"></a>Step2:构造实现画板各个功能的js代码</h2><blockquote>\n<p>1.构造<code>Draw()</code>类，并初始化必要的参数<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> Draw = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.type = <span class=\"string\">'pen'</span>;  <span class=\"comment\">//选项类型，默认为铅笔</span></span><br><span class=\"line\">    <span class=\"keyword\">this</span>.penal = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'penal'</span>);</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.pen = <span class=\"keyword\">this</span>.penal.getContext(<span class=\"string\">'2d'</span>);</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.isDraw = <span class=\"literal\">false</span>;    <span class=\"comment\">//绘画开关</span></span><br><span class=\"line\">    <span class=\"keyword\">this</span>.color = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'color'</span>);</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.lineWidth = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'lineWidth'</span>);</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.select = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'select'</span>);    <span class=\"comment\">//选择面板</span></span><br><span class=\"line\">    <span class=\"keyword\">this</span>.img = <span class=\"keyword\">new</span> Image();<span class=\"comment\">//用于动态绘制直线，矩形，圆形</span></span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure></p>\n<p>2.这里只需要构造一个初始化函数<code>init()</code></p>\n<blockquote>\n<p>初始化函数内部需要用到的变量<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">    Draw.prototype.init = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> self = <span class=\"keyword\">this</span>;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> originX = <span class=\"literal\">null</span>;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> originY = <span class=\"literal\">null</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"><span class=\"string\">`</span></span><br></pre></td></tr></table></figure></p>\n<p>先绑定选择操作<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">this</span>.select.addEventListener(<span class=\"string\">'click'</span>,<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">event</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(event.target.id == <span class=\"string\">'pen'</span>)&#123;</span><br><span class=\"line\">        self.type = <span class=\"string\">'pen'</span>;</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(event.target.id == <span class=\"string\">'line'</span>)&#123;</span><br><span class=\"line\">        self.type = <span class=\"string\">'line'</span>;</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(event.target.id == <span class=\"string\">'rect'</span>)&#123;</span><br><span class=\"line\">        self.type = <span class=\"string\">'rect'</span>;</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(event.target.id == <span class=\"string\">'arc'</span>)&#123;</span><br><span class=\"line\">        self.type = <span class=\"string\">'arc'</span>;</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(event.target.id == <span class=\"string\">'robber'</span>)&#123;</span><br><span class=\"line\">        self.type = <span class=\"string\">'robber'</span>;</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(event.target.id == <span class=\"string\">'img'</span>)&#123;</span><br><span class=\"line\">        <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'file'</span>).click();    <span class=\"comment\">//默认触发选择文件操作</span></span><br><span class=\"line\">        <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'file'</span>).onchange = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">e</span>)</span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">var</span> reader = <span class=\"keyword\">new</span> FileReader();          <span class=\"comment\">//这是H5新增加的读取文件函数</span></span><br><span class=\"line\">            reader.readAsDataURL(e.target.files[<span class=\"number\">0</span>]);</span><br><span class=\"line\">            reader.onload = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">ent</span>)</span>&#123;          <span class=\"comment\">//文件读取完毕后触发操作</span></span><br><span class=\"line\">                <span class=\"keyword\">var</span> img = <span class=\"keyword\">new</span> Image();</span><br><span class=\"line\">                img.src = ent.target.result;        <span class=\"comment\">//读取的结果默认存放在result上</span></span><br><span class=\"line\">                self.pen.drawImage(img,<span class=\"number\">0</span>,<span class=\"number\">0</span>);        <span class=\"comment\">//把图片直接画在画布上</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(event.target.id == <span class=\"string\">'save'</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> a = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">'a'</span>);</span><br><span class=\"line\">        a.href = self.penal.toDataURL(<span class=\"string\">'image/png'</span>);     <span class=\"comment\">//把画布转化为base64</span></span><br><span class=\"line\">        a.download = <span class=\"string\">'image.jpeg'</span>;</span><br><span class=\"line\">        a.id = <span class=\"string\">'download'</span>;</span><br><span class=\"line\">        a.innerHTML = <span class=\"string\">'download'</span>;</span><br><span class=\"line\">        <span class=\"built_in\">document</span>.body.appendChild(a);</span><br><span class=\"line\">        <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'download'</span>).style.display = <span class=\"string\">'none'</span>;</span><br><span class=\"line\">        <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'download'</span>).click();    <span class=\"comment\">//默认出发下载操作</span></span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;,<span class=\"literal\">false</span>);</span><br></pre></td></tr></table></figure></p>\n<p>可以知道当绘画时，<code>mousedown</code>事件触发时，需要把<code>this.isDraw = true</code>,同时记录鼠标所在坐标，获取选择的<code>color</code>和<code>linewidth</code>,并开启绘画路径<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">this</span>.penal.addEventListener(<span class=\"string\">'mousedown'</span>,<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">event</span>)</span>&#123;</span><br><span class=\"line\">    self.isDraw = <span class=\"literal\">true</span>;</span><br><span class=\"line\">    originX = event.clientX - self.penal.offsetLeft;    <span class=\"comment\">//原点x坐标</span></span><br><span class=\"line\">    originY = event.clientY - self.penal.offsetTop;     <span class=\"comment\">//原点y坐标</span></span><br><span class=\"line\">    self.pen.moveTo(originX, originY);</span><br><span class=\"line\">    self.pen.strokeStyle = self.color.value;</span><br><span class=\"line\">    self.pen.lineWidth = self.lineWidth.value;</span><br><span class=\"line\">    self.pen.beginPath();</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;,<span class=\"literal\">false</span>);</span><br></pre></td></tr></table></figure></p>\n<p>然后当触发<code>mouseup</code>事件时，可知需要结束绘画，若鼠标离开画布，即<code>mouseleave</code>时，也需要结束绘画，这部分很简单只需把<code>this.isDraw = false</code>和关闭绘画路径<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">this</span>.penal.addEventListener(<span class=\"string\">'mouseleave'</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(self.isDraw)&#123;</span><br><span class=\"line\">        self.pen.closePath();</span><br><span class=\"line\">        self.isDraw = <span class=\"literal\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;,<span class=\"literal\">false</span>);</span><br><span class=\"line\"><span class=\"keyword\">this</span>.penal.addEventListener(<span class=\"string\">'mouseup'</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">event</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(self.isDraw)&#123;</span><br><span class=\"line\">        self.pen.closePath();</span><br><span class=\"line\">        self.isDraw = <span class=\"literal\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;,<span class=\"literal\">false</span>);</span><br></pre></td></tr></table></figure></p>\n<p>接下来就是最难的部分的，当<code>mouseover</code>时，需要即时绘制</p>\n<blockquote>\n<p>先实现铅笔功能<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">this</span>.penal.addEventListener(<span class=\"string\">'mousemove'</span>,<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">event</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//只有可绘画时才可画</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(self.isDraw)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> x = event.clientX - self.penal.offsetLeft;  <span class=\"comment\">//移动过程中的x坐标</span></span><br><span class=\"line\">        <span class=\"keyword\">var</span> y = event.clientY - self.penal.offsetTop;   <span class=\"comment\">//移动过程中的y坐标</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span>(self.type == <span class=\"string\">'pen'</span>)&#123;</span><br><span class=\"line\">            self.pen.lineTo(x,y);</span><br><span class=\"line\">            self.pen.stroke();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;,<span class=\"literal\">false</span>);</span><br></pre></td></tr></table></figure></p>\n<p>接下来实现橡皮擦功能，实现方法是把绘画线条加粗，并颜色默认选择画布底色<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span>(self.type == <span class=\"string\">'robber'</span>)&#123;</span><br><span class=\"line\">     self.pen.strokeStyle = <span class=\"string\">'#ccc'</span>;</span><br><span class=\"line\">     self.pen.clearRect(x<span class=\"number\">-10</span>,y<span class=\"number\">-10</span>,<span class=\"number\">20</span>,<span class=\"number\">20</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>接下来实现绘制直线，矩形和圆形的方法其实大同小异,然后为了能让我们画矩形和圆形能在所有方向都能画，我们增加了<code>newOriginX</code>和<code>newOriginY</code>两个变量<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> newOriginX  = originX,newOriginY = originY;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span>(self.type == <span class=\"string\">'line'</span>)&#123;</span><br><span class=\"line\">    self.pen.moveTo(originX,originY);</span><br><span class=\"line\">    self.pen.lineTo(x,y);</span><br><span class=\"line\">    self.pen.stroke();</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(self.type == <span class=\"string\">'rect'</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(x &lt; originX)&#123;</span><br><span class=\"line\">        newOriginX = x;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(y &lt; originY)&#123;</span><br><span class=\"line\">        newOriginY = y;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    self.pen.rect(newOriginX,newOriginY,<span class=\"built_in\">Math</span>.abs(x-originX),<span class=\"built_in\">Math</span>.abs(y-originY));</span><br><span class=\"line\">    self.pen.stroke();</span><br><span class=\"line\">&#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(self.type == <span class=\"string\">'arc'</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(x &lt; originX)&#123;</span><br><span class=\"line\">        newOriginX = x;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(y &lt; originY)&#123;</span><br><span class=\"line\">        newOriginY = y;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> r = <span class=\"built_in\">Math</span>.sqrt(<span class=\"built_in\">Math</span>.abs(x-originX) * <span class=\"built_in\">Math</span>.abs(x-originX) + <span class=\"built_in\">Math</span>.abs(y-originY) * <span class=\"built_in\">Math</span>.abs(y-originY))</span><br><span class=\"line\">    self.pen.arc(<span class=\"built_in\">Math</span>.abs(x-originX)+newOriginX, <span class=\"built_in\">Math</span>.abs(y-originY)+newOriginY , r, <span class=\"number\">0</span>, <span class=\"number\">2</span>*<span class=\"built_in\">Math</span>.PI);</span><br><span class=\"line\">    self.pen.fillStyle = self.color.value;</span><br><span class=\"line\">    self.pen.fill();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p><code>question:</code>此时我们发现画的直线，矩形和圆形都会在画的时候留下移动的痕迹，这不是我们希望的结果，所以解决方法是：<br>在<code>mousedown</code>时，把当前画布内容保存为图片，并用初始化时一直没有使用过的<code>this.img</code>来保存，然后每次画直线等的时候先把画布全部清空，然后在把<code>this.img</code>画到画布上<br>把原来的<code>mousedown</code>事件添加一句代码<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">this</span>.penal.addEventListener(<span class=\"string\">'mousedown'</span>,<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">event</span>)</span>&#123;</span><br><span class=\"line\">    self.isDraw = <span class=\"literal\">true</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//增加一句代码</span></span><br><span class=\"line\">    self.img.src = self.penal.toDataURL(<span class=\"string\">'image/png'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    originX = event.clientX - self.penal.offsetLeft;    <span class=\"comment\">//原点x坐标</span></span><br><span class=\"line\">    originY = event.clientY - self.penal.offsetTop;     <span class=\"comment\">//原点y坐标</span></span><br><span class=\"line\">    self.pen.moveTo(originX, originY);</span><br><span class=\"line\">    self.pen.strokeStyle = self.color.value;</span><br><span class=\"line\">    self.pen.lineWidth = self.lineWidth.value;</span><br><span class=\"line\">    self.pen.beginPath();</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;,<span class=\"literal\">false</span>);</span><br></pre></td></tr></table></figure></p>\n<p>把<code>mouseover</code>事件的代码稍作更改<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span>(self.type == <span class=\"string\">'line'</span>)&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    self.pen.clearRect(<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">800</span>,<span class=\"number\">800</span>);<span class=\"comment\">//增加代码</span></span><br><span class=\"line\">    self.pen.drawImage(self.img, <span class=\"number\">0</span>, <span class=\"number\">0</span>);<span class=\"comment\">//增加代码</span></span><br><span class=\"line\">    self.pen.beginPath();<span class=\"comment\">//增加代码</span></span><br><span class=\"line\"></span><br><span class=\"line\">    self.pen.moveTo(originX,originY);</span><br><span class=\"line\">    self.pen.lineTo(x,y);</span><br><span class=\"line\">    self.pen.stroke();</span><br><span class=\"line\"></span><br><span class=\"line\">    self.pen.closePath();<span class=\"comment\">//增加代码</span></span><br><span class=\"line\">&#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(self.type == <span class=\"string\">'rect'</span>)&#123;</span><br><span class=\"line\">    self.pen.clearRect(<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">800</span>,<span class=\"number\">800</span>);<span class=\"comment\">//增加代码</span></span><br><span class=\"line\">    self.pen.drawImage(self.img, <span class=\"number\">0</span>, <span class=\"number\">0</span>);<span class=\"comment\">//增加代码</span></span><br><span class=\"line\">    self.pen.beginPath();<span class=\"comment\">//增加代码</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(x &lt; originX)&#123;</span><br><span class=\"line\">        newOriginX = x;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(y &lt; originY)&#123;</span><br><span class=\"line\">        newOriginY = y;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    self.pen.rect(newOriginX,newOriginY,<span class=\"built_in\">Math</span>.abs(x-originX),<span class=\"built_in\">Math</span>.abs(y-originY));</span><br><span class=\"line\">    self.pen.stroke();</span><br><span class=\"line\"></span><br><span class=\"line\">    self.pen.closePath();<span class=\"comment\">//增加代码</span></span><br><span class=\"line\">&#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(self.type == <span class=\"string\">'arc'</span>)&#123;</span><br><span class=\"line\">    self.pen.clearRect(<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">800</span>,<span class=\"number\">800</span>);<span class=\"comment\">//增加代码</span></span><br><span class=\"line\">    self.pen.drawImage(self.img, <span class=\"number\">0</span>, <span class=\"number\">0</span>);<span class=\"comment\">//增加代码</span></span><br><span class=\"line\">    self.pen.beginPath();<span class=\"comment\">//增加代码</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(x &lt; originX)&#123;</span><br><span class=\"line\">        newOriginX = x;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(y &lt; originY)&#123;</span><br><span class=\"line\">        newOriginY = y;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> r = <span class=\"built_in\">Math</span>.sqrt(<span class=\"built_in\">Math</span>.abs(x-originX) * <span class=\"built_in\">Math</span>.abs(x-originX) + <span class=\"built_in\">Math</span>.abs(y-originY) * <span class=\"built_in\">Math</span>.abs(y-originY))</span><br><span class=\"line\">    self.pen.arc(<span class=\"built_in\">Math</span>.abs(x-originX)+newOriginX, <span class=\"built_in\">Math</span>.abs(y-originY)+newOriginY , r, <span class=\"number\">0</span>, <span class=\"number\">2</span>*<span class=\"built_in\">Math</span>.PI);</span><br><span class=\"line\">    self.pen.fillStyle = self.color.value;</span><br><span class=\"line\">    self.pen.fill();</span><br><span class=\"line\">    self.pen.closePath();<span class=\"comment\">//增加代码</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n</blockquote>\n</blockquote>\n</blockquote>\n<h2 id=\"Step3-加载js文件\"><a href=\"#Step3-加载js文件\" class=\"headerlink\" title=\"Step3:加载js文件\"></a>Step3:加载js文件</h2><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">\"draw.js\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></span><br><span class=\"line\">    <span class=\"built_in\">window</span>.onload = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> draw = <span class=\"keyword\">new</span> Draw();</span><br><span class=\"line\">        draw.init();</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>最后简单的画板功能就是实现了，如有不足之处请指出</p>\n","excerpt":"","more":"<h1 id=\"canvas实现画板功能\"><a href=\"#canvas实现画板功能\" class=\"headerlink\" title=\"canvas实现画板功能\"></a>canvas实现画板功能</h1><blockquote>\n<p>需求分析<br>1.具有基本的铅笔功能<br>2.即时直线绘制<br>3.即时绘制矩形<br>4.即时圆形<br>5.即时橡皮擦<br>7.插入图片<br>8.把画板保存为图片并下载  //此处还没做好，画板底色是黑色的<br>9.选择颜色<br>10.选择线条粗细</p>\n</blockquote>\n<h2 id=\"Setp1-构建网页基本样式\"><a href=\"#Setp1-构建网页基本样式\" class=\"headerlink\" title=\"Setp1:构建网页基本样式\"></a>Setp1:构建网页基本样式</h2><blockquote>\n<p>html代码<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!--可选操作--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"select\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">id</span>=<span class=\"string\">\"pen\"</span>&gt;</span>铅笔<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">id</span>=<span class=\"string\">\"line\"</span>&gt;</span>直线<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">id</span>=<span class=\"string\">\"rect\"</span>&gt;</span>矩形<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">id</span>=<span class=\"string\">\"arc\"</span>&gt;</span>圆形<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">id</span>=<span class=\"string\">\"robber\"</span>&gt;</span>橡皮檫<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">id</span>=<span class=\"string\">\"img\"</span>&gt;</span>图片<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">id</span>=<span class=\"string\">\"save\"</span>&gt;</span>保存<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"file\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"file\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"img\"</span> <span class=\"attr\">style</span>=<span class=\"string\">\"display: none\"</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"color\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"color\"</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"number\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"lineWidth\"</span>/&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!--画板--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">canvas</span> <span class=\"attr\">id</span>=<span class=\"string\">\"penal\"</span> <span class=\"attr\">width</span>=<span class=\"string\">\"800\"</span> <span class=\"attr\">height</span>=<span class=\"string\">\"800\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">canvas</span>&gt;</span></span><br></pre></td></tr></table></figure></p>\n<p>css代码<br><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/`只有一句，用来初始化画板颜色`/</span><br><span class=\"line\">#penal &#123;</span><br><span class=\"line\">    width: 800px;</span><br><span class=\"line\">    height: 800px;</span><br><span class=\"line\">    background-color: #ccc;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<h2 id=\"Step2-构造实现画板各个功能的js代码\"><a href=\"#Step2-构造实现画板各个功能的js代码\" class=\"headerlink\" title=\"Step2:构造实现画板各个功能的js代码\"></a>Step2:构造实现画板各个功能的js代码</h2><blockquote>\n<p>1.构造<code>Draw()</code>类，并初始化必要的参数<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> Draw = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.type = <span class=\"string\">'pen'</span>;  <span class=\"comment\">//选项类型，默认为铅笔</span></span><br><span class=\"line\">    <span class=\"keyword\">this</span>.penal = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'penal'</span>);</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.pen = <span class=\"keyword\">this</span>.penal.getContext(<span class=\"string\">'2d'</span>);</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.isDraw = <span class=\"literal\">false</span>;    <span class=\"comment\">//绘画开关</span></span><br><span class=\"line\">    <span class=\"keyword\">this</span>.color = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'color'</span>);</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.lineWidth = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'lineWidth'</span>);</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.select = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'select'</span>);    <span class=\"comment\">//选择面板</span></span><br><span class=\"line\">    <span class=\"keyword\">this</span>.img = <span class=\"keyword\">new</span> Image();<span class=\"comment\">//用于动态绘制直线，矩形，圆形</span></span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure></p>\n<p>2.这里只需要构造一个初始化函数<code>init()</code></p>\n<blockquote>\n<p>初始化函数内部需要用到的变量<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">    Draw.prototype.init = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> self = <span class=\"keyword\">this</span>;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> originX = <span class=\"literal\">null</span>;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> originY = <span class=\"literal\">null</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"><span class=\"string\">`</span></span><br></pre></td></tr></table></figure></p>\n<p>先绑定选择操作<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">this</span>.select.addEventListener(<span class=\"string\">'click'</span>,<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">event</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(event.target.id == <span class=\"string\">'pen'</span>)&#123;</span><br><span class=\"line\">        self.type = <span class=\"string\">'pen'</span>;</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(event.target.id == <span class=\"string\">'line'</span>)&#123;</span><br><span class=\"line\">        self.type = <span class=\"string\">'line'</span>;</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(event.target.id == <span class=\"string\">'rect'</span>)&#123;</span><br><span class=\"line\">        self.type = <span class=\"string\">'rect'</span>;</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(event.target.id == <span class=\"string\">'arc'</span>)&#123;</span><br><span class=\"line\">        self.type = <span class=\"string\">'arc'</span>;</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(event.target.id == <span class=\"string\">'robber'</span>)&#123;</span><br><span class=\"line\">        self.type = <span class=\"string\">'robber'</span>;</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(event.target.id == <span class=\"string\">'img'</span>)&#123;</span><br><span class=\"line\">        <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'file'</span>).click();    <span class=\"comment\">//默认触发选择文件操作</span></span><br><span class=\"line\">        <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'file'</span>).onchange = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">e</span>)</span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">var</span> reader = <span class=\"keyword\">new</span> FileReader();          <span class=\"comment\">//这是H5新增加的读取文件函数</span></span><br><span class=\"line\">            reader.readAsDataURL(e.target.files[<span class=\"number\">0</span>]);</span><br><span class=\"line\">            reader.onload = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">ent</span>)</span>&#123;          <span class=\"comment\">//文件读取完毕后触发操作</span></span><br><span class=\"line\">                <span class=\"keyword\">var</span> img = <span class=\"keyword\">new</span> Image();</span><br><span class=\"line\">                img.src = ent.target.result;        <span class=\"comment\">//读取的结果默认存放在result上</span></span><br><span class=\"line\">                self.pen.drawImage(img,<span class=\"number\">0</span>,<span class=\"number\">0</span>);        <span class=\"comment\">//把图片直接画在画布上</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(event.target.id == <span class=\"string\">'save'</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> a = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">'a'</span>);</span><br><span class=\"line\">        a.href = self.penal.toDataURL(<span class=\"string\">'image/png'</span>);     <span class=\"comment\">//把画布转化为base64</span></span><br><span class=\"line\">        a.download = <span class=\"string\">'image.jpeg'</span>;</span><br><span class=\"line\">        a.id = <span class=\"string\">'download'</span>;</span><br><span class=\"line\">        a.innerHTML = <span class=\"string\">'download'</span>;</span><br><span class=\"line\">        <span class=\"built_in\">document</span>.body.appendChild(a);</span><br><span class=\"line\">        <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'download'</span>).style.display = <span class=\"string\">'none'</span>;</span><br><span class=\"line\">        <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'download'</span>).click();    <span class=\"comment\">//默认出发下载操作</span></span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;,<span class=\"literal\">false</span>);</span><br></pre></td></tr></table></figure></p>\n<p>可以知道当绘画时，<code>mousedown</code>事件触发时，需要把<code>this.isDraw = true</code>,同时记录鼠标所在坐标，获取选择的<code>color</code>和<code>linewidth</code>,并开启绘画路径<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">this</span>.penal.addEventListener(<span class=\"string\">'mousedown'</span>,<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">event</span>)</span>&#123;</span><br><span class=\"line\">    self.isDraw = <span class=\"literal\">true</span>;</span><br><span class=\"line\">    originX = event.clientX - self.penal.offsetLeft;    <span class=\"comment\">//原点x坐标</span></span><br><span class=\"line\">    originY = event.clientY - self.penal.offsetTop;     <span class=\"comment\">//原点y坐标</span></span><br><span class=\"line\">    self.pen.moveTo(originX, originY);</span><br><span class=\"line\">    self.pen.strokeStyle = self.color.value;</span><br><span class=\"line\">    self.pen.lineWidth = self.lineWidth.value;</span><br><span class=\"line\">    self.pen.beginPath();</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;,<span class=\"literal\">false</span>);</span><br></pre></td></tr></table></figure></p>\n<p>然后当触发<code>mouseup</code>事件时，可知需要结束绘画，若鼠标离开画布，即<code>mouseleave</code>时，也需要结束绘画，这部分很简单只需把<code>this.isDraw = false</code>和关闭绘画路径<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">this</span>.penal.addEventListener(<span class=\"string\">'mouseleave'</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(self.isDraw)&#123;</span><br><span class=\"line\">        self.pen.closePath();</span><br><span class=\"line\">        self.isDraw = <span class=\"literal\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;,<span class=\"literal\">false</span>);</span><br><span class=\"line\"><span class=\"keyword\">this</span>.penal.addEventListener(<span class=\"string\">'mouseup'</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">event</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(self.isDraw)&#123;</span><br><span class=\"line\">        self.pen.closePath();</span><br><span class=\"line\">        self.isDraw = <span class=\"literal\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;,<span class=\"literal\">false</span>);</span><br></pre></td></tr></table></figure></p>\n<p>接下来就是最难的部分的，当<code>mouseover</code>时，需要即时绘制</p>\n<blockquote>\n<p>先实现铅笔功能<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">this</span>.penal.addEventListener(<span class=\"string\">'mousemove'</span>,<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">event</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//只有可绘画时才可画</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(self.isDraw)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> x = event.clientX - self.penal.offsetLeft;  <span class=\"comment\">//移动过程中的x坐标</span></span><br><span class=\"line\">        <span class=\"keyword\">var</span> y = event.clientY - self.penal.offsetTop;   <span class=\"comment\">//移动过程中的y坐标</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span>(self.type == <span class=\"string\">'pen'</span>)&#123;</span><br><span class=\"line\">            self.pen.lineTo(x,y);</span><br><span class=\"line\">            self.pen.stroke();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;,<span class=\"literal\">false</span>);</span><br></pre></td></tr></table></figure></p>\n<p>接下来实现橡皮擦功能，实现方法是把绘画线条加粗，并颜色默认选择画布底色<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span>(self.type == <span class=\"string\">'robber'</span>)&#123;</span><br><span class=\"line\">     self.pen.strokeStyle = <span class=\"string\">'#ccc'</span>;</span><br><span class=\"line\">     self.pen.clearRect(x<span class=\"number\">-10</span>,y<span class=\"number\">-10</span>,<span class=\"number\">20</span>,<span class=\"number\">20</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>接下来实现绘制直线，矩形和圆形的方法其实大同小异,然后为了能让我们画矩形和圆形能在所有方向都能画，我们增加了<code>newOriginX</code>和<code>newOriginY</code>两个变量<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> newOriginX  = originX,newOriginY = originY;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span>(self.type == <span class=\"string\">'line'</span>)&#123;</span><br><span class=\"line\">    self.pen.moveTo(originX,originY);</span><br><span class=\"line\">    self.pen.lineTo(x,y);</span><br><span class=\"line\">    self.pen.stroke();</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(self.type == <span class=\"string\">'rect'</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(x &lt; originX)&#123;</span><br><span class=\"line\">        newOriginX = x;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(y &lt; originY)&#123;</span><br><span class=\"line\">        newOriginY = y;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    self.pen.rect(newOriginX,newOriginY,<span class=\"built_in\">Math</span>.abs(x-originX),<span class=\"built_in\">Math</span>.abs(y-originY));</span><br><span class=\"line\">    self.pen.stroke();</span><br><span class=\"line\">&#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(self.type == <span class=\"string\">'arc'</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(x &lt; originX)&#123;</span><br><span class=\"line\">        newOriginX = x;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(y &lt; originY)&#123;</span><br><span class=\"line\">        newOriginY = y;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> r = <span class=\"built_in\">Math</span>.sqrt(<span class=\"built_in\">Math</span>.abs(x-originX) * <span class=\"built_in\">Math</span>.abs(x-originX) + <span class=\"built_in\">Math</span>.abs(y-originY) * <span class=\"built_in\">Math</span>.abs(y-originY))</span><br><span class=\"line\">    self.pen.arc(<span class=\"built_in\">Math</span>.abs(x-originX)+newOriginX, <span class=\"built_in\">Math</span>.abs(y-originY)+newOriginY , r, <span class=\"number\">0</span>, <span class=\"number\">2</span>*<span class=\"built_in\">Math</span>.PI);</span><br><span class=\"line\">    self.pen.fillStyle = self.color.value;</span><br><span class=\"line\">    self.pen.fill();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p><code>question:</code>此时我们发现画的直线，矩形和圆形都会在画的时候留下移动的痕迹，这不是我们希望的结果，所以解决方法是：<br>在<code>mousedown</code>时，把当前画布内容保存为图片，并用初始化时一直没有使用过的<code>this.img</code>来保存，然后每次画直线等的时候先把画布全部清空，然后在把<code>this.img</code>画到画布上<br>把原来的<code>mousedown</code>事件添加一句代码<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">this</span>.penal.addEventListener(<span class=\"string\">'mousedown'</span>,<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">event</span>)</span>&#123;</span><br><span class=\"line\">    self.isDraw = <span class=\"literal\">true</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//增加一句代码</span></span><br><span class=\"line\">    self.img.src = self.penal.toDataURL(<span class=\"string\">'image/png'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    originX = event.clientX - self.penal.offsetLeft;    <span class=\"comment\">//原点x坐标</span></span><br><span class=\"line\">    originY = event.clientY - self.penal.offsetTop;     <span class=\"comment\">//原点y坐标</span></span><br><span class=\"line\">    self.pen.moveTo(originX, originY);</span><br><span class=\"line\">    self.pen.strokeStyle = self.color.value;</span><br><span class=\"line\">    self.pen.lineWidth = self.lineWidth.value;</span><br><span class=\"line\">    self.pen.beginPath();</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;,<span class=\"literal\">false</span>);</span><br></pre></td></tr></table></figure></p>\n<p>把<code>mouseover</code>事件的代码稍作更改<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span>(self.type == <span class=\"string\">'line'</span>)&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    self.pen.clearRect(<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">800</span>,<span class=\"number\">800</span>);<span class=\"comment\">//增加代码</span></span><br><span class=\"line\">    self.pen.drawImage(self.img, <span class=\"number\">0</span>, <span class=\"number\">0</span>);<span class=\"comment\">//增加代码</span></span><br><span class=\"line\">    self.pen.beginPath();<span class=\"comment\">//增加代码</span></span><br><span class=\"line\"></span><br><span class=\"line\">    self.pen.moveTo(originX,originY);</span><br><span class=\"line\">    self.pen.lineTo(x,y);</span><br><span class=\"line\">    self.pen.stroke();</span><br><span class=\"line\"></span><br><span class=\"line\">    self.pen.closePath();<span class=\"comment\">//增加代码</span></span><br><span class=\"line\">&#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(self.type == <span class=\"string\">'rect'</span>)&#123;</span><br><span class=\"line\">    self.pen.clearRect(<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">800</span>,<span class=\"number\">800</span>);<span class=\"comment\">//增加代码</span></span><br><span class=\"line\">    self.pen.drawImage(self.img, <span class=\"number\">0</span>, <span class=\"number\">0</span>);<span class=\"comment\">//增加代码</span></span><br><span class=\"line\">    self.pen.beginPath();<span class=\"comment\">//增加代码</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(x &lt; originX)&#123;</span><br><span class=\"line\">        newOriginX = x;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(y &lt; originY)&#123;</span><br><span class=\"line\">        newOriginY = y;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    self.pen.rect(newOriginX,newOriginY,<span class=\"built_in\">Math</span>.abs(x-originX),<span class=\"built_in\">Math</span>.abs(y-originY));</span><br><span class=\"line\">    self.pen.stroke();</span><br><span class=\"line\"></span><br><span class=\"line\">    self.pen.closePath();<span class=\"comment\">//增加代码</span></span><br><span class=\"line\">&#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(self.type == <span class=\"string\">'arc'</span>)&#123;</span><br><span class=\"line\">    self.pen.clearRect(<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">800</span>,<span class=\"number\">800</span>);<span class=\"comment\">//增加代码</span></span><br><span class=\"line\">    self.pen.drawImage(self.img, <span class=\"number\">0</span>, <span class=\"number\">0</span>);<span class=\"comment\">//增加代码</span></span><br><span class=\"line\">    self.pen.beginPath();<span class=\"comment\">//增加代码</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(x &lt; originX)&#123;</span><br><span class=\"line\">        newOriginX = x;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(y &lt; originY)&#123;</span><br><span class=\"line\">        newOriginY = y;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> r = <span class=\"built_in\">Math</span>.sqrt(<span class=\"built_in\">Math</span>.abs(x-originX) * <span class=\"built_in\">Math</span>.abs(x-originX) + <span class=\"built_in\">Math</span>.abs(y-originY) * <span class=\"built_in\">Math</span>.abs(y-originY))</span><br><span class=\"line\">    self.pen.arc(<span class=\"built_in\">Math</span>.abs(x-originX)+newOriginX, <span class=\"built_in\">Math</span>.abs(y-originY)+newOriginY , r, <span class=\"number\">0</span>, <span class=\"number\">2</span>*<span class=\"built_in\">Math</span>.PI);</span><br><span class=\"line\">    self.pen.fillStyle = self.color.value;</span><br><span class=\"line\">    self.pen.fill();</span><br><span class=\"line\">    self.pen.closePath();<span class=\"comment\">//增加代码</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n</blockquote>\n</blockquote>\n</blockquote>\n<h2 id=\"Step3-加载js文件\"><a href=\"#Step3-加载js文件\" class=\"headerlink\" title=\"Step3:加载js文件\"></a>Step3:加载js文件</h2><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">\"draw.js\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></span><br><span class=\"line\">    <span class=\"built_in\">window</span>.onload = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> draw = <span class=\"keyword\">new</span> Draw();</span><br><span class=\"line\">        draw.init();</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>最后简单的画板功能就是实现了，如有不足之处请指出</p>\n"},{"title":"Hello World","_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","source":"_posts/hello-world.md","raw":"---\ntitle: Hello World\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","slug":"hello-world","published":1,"date":"2016-05-21T20:56:59.224Z","updated":"2016-05-21T20:56:59.224Z","comments":1,"layout":"post","photos":[],"link":"","_id":"citvr1s8q0002qr1d4sxehkpg","content":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"external\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"external\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"external\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"external\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"external\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"external\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"external\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"external\">Deployment</a></p>\n","excerpt":"","more":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\">Deployment</a></p>\n"},{"title":"我的第一篇hexo博客","date":"2016-05-23T11:41:00.000Z","keywords":"hexo博客搭建","description":"hexo博客搭建","_content":"hexo博客搭建\n-------\n>1.首先配置环境，需要用到` git`，`nodejs`，这里google上都有教程\n>2.安装hexo\n    执行 *npm install hexo-cli -g*\n    可能报错如下：\n\n```shell\n    npm ERR! Please try running this command again root/Administratot\n```\n需要root权限\n执行\n    ● *sudo npm install hexo-cli -g*\n    ● *hexo init blog*\n    ● *cd blog*\n    ● *npm install*\n    ● *hexo server*\n然后访问`http://localhost:4000`即可访问本地博客，哎呦还不错哦\n\ngit迁移\n------\n现在我们的博客都只是可以在本地访问，但做好了博客肯定要放出去装下逼啊\n>1.创建git仓库什么的就不说了，先来看看配置,打开根目录下的_config.yml\n\n```javascript\n    deploy:\n      type: git\n      repository: git@github.com:1364137942/1364137942.github.io.git\n      branch: master\n```\n>2.然后执行\n\n   ● *hexo clean*\n   ● *hexo generate*\n   ● *hexo deploy*\n然后问题又来了\n```shell\n    ERROR Deployer not found: git\n```\ngoogle了很久，终于找到了解决方法\n执行下面一条代码后再执行\n   ● *npm install hexo-deployer-git --save*\n\n>3.大功告成，基本的博客总算做好了，然后还改了一下主题，把code的样式改了一下，然后写这篇博文的时候发现了 **代码不能高亮** 了,心累啊\n\n找了一下原因，把我之前改的关于`code`的`css`还原了，还是不行，于是又找了强大的google\n解决方法如下\n```shell\n    vi /themes/pacman/source/css/_base/variable.styl\n\n    // 注释最后一行\n    // highlight = hexo-config(\"highlight.enable\")\n\n    hexo clean\n    hexo g\n    hexo s\n```\n神奇的代码高亮回来了\n\n\n\n\n","source":"_posts/我的第一篇hexo博客.md","raw":"---\ntitle: 我的第一篇hexo博客\ndate: 2016-05-23 19:41:00\ntags: hexo\ncategories: 博客\nkeywords: hexo博客搭建\ndescription: hexo博客搭建\n---\nhexo博客搭建\n-------\n>1.首先配置环境，需要用到` git`，`nodejs`，这里google上都有教程\n>2.安装hexo\n    执行 *npm install hexo-cli -g*\n    可能报错如下：\n\n```shell\n    npm ERR! Please try running this command again root/Administratot\n```\n需要root权限\n执行\n    ● *sudo npm install hexo-cli -g*\n    ● *hexo init blog*\n    ● *cd blog*\n    ● *npm install*\n    ● *hexo server*\n然后访问`http://localhost:4000`即可访问本地博客，哎呦还不错哦\n\ngit迁移\n------\n现在我们的博客都只是可以在本地访问，但做好了博客肯定要放出去装下逼啊\n>1.创建git仓库什么的就不说了，先来看看配置,打开根目录下的_config.yml\n\n```javascript\n    deploy:\n      type: git\n      repository: git@github.com:1364137942/1364137942.github.io.git\n      branch: master\n```\n>2.然后执行\n\n   ● *hexo clean*\n   ● *hexo generate*\n   ● *hexo deploy*\n然后问题又来了\n```shell\n    ERROR Deployer not found: git\n```\ngoogle了很久，终于找到了解决方法\n执行下面一条代码后再执行\n   ● *npm install hexo-deployer-git --save*\n\n>3.大功告成，基本的博客总算做好了，然后还改了一下主题，把code的样式改了一下，然后写这篇博文的时候发现了 **代码不能高亮** 了,心累啊\n\n找了一下原因，把我之前改的关于`code`的`css`还原了，还是不行，于是又找了强大的google\n解决方法如下\n```shell\n    vi /themes/pacman/source/css/_base/variable.styl\n\n    // 注释最后一行\n    // highlight = hexo-config(\"highlight.enable\")\n\n    hexo clean\n    hexo g\n    hexo s\n```\n神奇的代码高亮回来了\n\n\n\n\n","slug":"我的第一篇hexo博客","published":1,"updated":"2016-05-23T13:21:49.487Z","comments":1,"layout":"post","photos":[],"link":"","_id":"citvr1s910006qr1dbx3sx8go","content":"<h2 id=\"hexo博客搭建\"><a href=\"#hexo博客搭建\" class=\"headerlink\" title=\"hexo博客搭建\"></a>hexo博客搭建</h2><blockquote>\n<p>1.首先配置环境，需要用到<code>git</code>，<code>nodejs</code>，这里google上都有教程<br>2.安装hexo<br>    执行 <em>npm install hexo-cli -g</em><br>    可能报错如下：</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm ERR! Please try running this command again root/Administratot</span><br></pre></td></tr></table></figure>\n<p>需要root权限<br>执行<br>    ● <em>sudo npm install hexo-cli -g</em><br>    ● <em>hexo init blog</em><br>    ● <em>cd blog</em><br>    ● <em>npm install</em><br>    ● <em>hexo server</em><br>然后访问<code>http://localhost:4000</code>即可访问本地博客，哎呦还不错哦</p>\n<h2 id=\"git迁移\"><a href=\"#git迁移\" class=\"headerlink\" title=\"git迁移\"></a>git迁移</h2><p>现在我们的博客都只是可以在本地访问，但做好了博客肯定要放出去装下逼啊</p>\n<blockquote>\n<p>1.创建git仓库什么的就不说了，先来看看配置,打开根目录下的_config.yml</p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">deploy:</span><br><span class=\"line\">  type: git</span><br><span class=\"line\">  repository: git@github.com:<span class=\"number\">1364137942</span>/<span class=\"number\">1364137942.</span>github.io.git</span><br><span class=\"line\">  branch: master</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>2.然后执行</p>\n</blockquote>\n<p>   ● <em>hexo clean</em><br>   ● <em>hexo generate</em><br>   ● <em>hexo deploy</em><br>然后问题又来了<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ERROR Deployer not found: git</span><br></pre></td></tr></table></figure></p>\n<p>google了很久，终于找到了解决方法<br>执行下面一条代码后再执行<br>   ● <em>npm install hexo-deployer-git –save</em></p>\n<blockquote>\n<p>3.大功告成，基本的博客总算做好了，然后还改了一下主题，把code的样式改了一下，然后写这篇博文的时候发现了 <strong>代码不能高亮</strong> 了,心累啊</p>\n</blockquote>\n<p>找了一下原因，把我之前改的关于<code>code</code>的<code>css</code>还原了，还是不行，于是又找了强大的google<br>解决方法如下<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vi /themes/pacman/source/css/_base/variable.styl</span><br><span class=\"line\"></span><br><span class=\"line\">// 注释最后一行</span><br><span class=\"line\">// highlight = hexo-config(&quot;highlight.enable&quot;)</span><br><span class=\"line\"></span><br><span class=\"line\">hexo clean</span><br><span class=\"line\">hexo g</span><br><span class=\"line\">hexo s</span><br></pre></td></tr></table></figure></p>\n<p>神奇的代码高亮回来了</p>\n","excerpt":"","more":"<h2 id=\"hexo博客搭建\"><a href=\"#hexo博客搭建\" class=\"headerlink\" title=\"hexo博客搭建\"></a>hexo博客搭建</h2><blockquote>\n<p>1.首先配置环境，需要用到<code>git</code>，<code>nodejs</code>，这里google上都有教程<br>2.安装hexo<br>    执行 <em>npm install hexo-cli -g</em><br>    可能报错如下：</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm ERR! Please try running this command again root/Administratot</span><br></pre></td></tr></table></figure>\n<p>需要root权限<br>执行<br>    ● <em>sudo npm install hexo-cli -g</em><br>    ● <em>hexo init blog</em><br>    ● <em>cd blog</em><br>    ● <em>npm install</em><br>    ● <em>hexo server</em><br>然后访问<code>http://localhost:4000</code>即可访问本地博客，哎呦还不错哦</p>\n<h2 id=\"git迁移\"><a href=\"#git迁移\" class=\"headerlink\" title=\"git迁移\"></a>git迁移</h2><p>现在我们的博客都只是可以在本地访问，但做好了博客肯定要放出去装下逼啊</p>\n<blockquote>\n<p>1.创建git仓库什么的就不说了，先来看看配置,打开根目录下的_config.yml</p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">deploy:</span><br><span class=\"line\">  type: git</span><br><span class=\"line\">  repository: git@github.com:<span class=\"number\">1364137942</span>/<span class=\"number\">1364137942.</span>github.io.git</span><br><span class=\"line\">  branch: master</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>2.然后执行</p>\n</blockquote>\n<p>   ● <em>hexo clean</em><br>   ● <em>hexo generate</em><br>   ● <em>hexo deploy</em><br>然后问题又来了<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ERROR Deployer not found: git</span><br></pre></td></tr></table></figure></p>\n<p>google了很久，终于找到了解决方法<br>执行下面一条代码后再执行<br>   ● <em>npm install hexo-deployer-git –save</em></p>\n<blockquote>\n<p>3.大功告成，基本的博客总算做好了，然后还改了一下主题，把code的样式改了一下，然后写这篇博文的时候发现了 <strong>代码不能高亮</strong> 了,心累啊</p>\n</blockquote>\n<p>找了一下原因，把我之前改的关于<code>code</code>的<code>css</code>还原了，还是不行，于是又找了强大的google<br>解决方法如下<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vi /themes/pacman/source/css/_base/variable.styl</span><br><span class=\"line\"></span><br><span class=\"line\">// 注释最后一行</span><br><span class=\"line\">// highlight = hexo-config(&quot;highlight.enable&quot;)</span><br><span class=\"line\"></span><br><span class=\"line\">hexo clean</span><br><span class=\"line\">hexo g</span><br><span class=\"line\">hexo s</span><br></pre></td></tr></table></figure></p>\n<p>神奇的代码高亮回来了</p>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"citvr1s8i0000qr1dvyq3rr7n","category_id":"citvr1s900005qr1dvn34oxdd","_id":"citvr1s9c000bqr1dgvh50fbc"},{"post_id":"citvr1s910006qr1dbx3sx8go","category_id":"citvr1s980009qr1da1v3d7qm","_id":"citvr1s9d000dqr1dyutsp8xm"}],"PostTag":[{"post_id":"citvr1s8i0000qr1dvyq3rr7n","tag_id":"citvr1s8x0004qr1dikvrdnwq","_id":"citvr1s9b000aqr1djbcy7ymb"},{"post_id":"citvr1s910006qr1dbx3sx8go","tag_id":"citvr1s960008qr1drh9qx1qu","_id":"citvr1s9c000cqr1d9hswf0s0"}],"Tag":[{"name":"canvas","_id":"citvr1s8x0004qr1dikvrdnwq"},{"name":"hexo","_id":"citvr1s960008qr1drh9qx1qu"}]}}